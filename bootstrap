#!/usr/bin/env bash

# catch error
trap 'ret=$?; test $ret -ne 0 && printf "\n\e[31mfailed\033[0m\n" >&2; exit $ret' EXIT

set -e

# check for utils file
if [ -e utils ]; then
	cd "$(dirname "${BASH_SOURCE[0]}")" \
		&& . "utils"
else
	printf "\n ⚠️  ./utils not found\n"
	exit 1
fi

# install xcode
if type xcode-select >&- && xpath=$( xcode-select --print-path ) &&
	test -d "${xpath}" && test -x "${xpath}" ; then
	print_success_muted "Xcode already installed. Skipping."
else
	echo "Installing Xcode…"
	xcode-select --install
	print_success "Xcode installed!"
fi

# create home bin
if [ ! -d "$HOME/.bin/" ]; then
	mkdir "$HOME/.bin"
fi

# install brew formulaes
if [ -e $cwd/swag/brews ]; then
	echo "Installing Homebrew formulae…"

	for brew in $(<$cwd/swag/brews); do
		install_brews $brew
	done
fi

echo "Updating Homebrew formulae…"
brew update

# install brew casks
if [ -e $cwd/swag/casks ]; then
	echo "Installing apps via Homebrew…"

	for cask in $(<$cwd/swag/casks); do
	    install_application_via_brew $cask
	done
fi

# brew cleanup
echo "Cleaning up Homebrew files…"
brew cleanup 2> /dev/null
brew cask cleanup 2> /dev/null

# install npm packages
if [ -e $cwd/swag/npm ]; then
	echo "Installing npm packages…"

  for pkg in $(<$cwd/swag/npm); do
	    install_npm_packages $pkg
	done
fi

exit 0


# Enable zsh shell
if [[ "$SHELL" != "/bin/zsh" ]]; then
  chsh -s $(which zsh)
fi

which -s brew
if [[ $? != 0 ]] ; then
  # Install homebrew
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
else
  # Make sure we're using latest Homebrew
  brew update
fi

# Install brew formulaes
brew install coreutils
brew install node
brew install ansible
brew install tree
brew install python3
brew install bat
brew install htop
brew install diff-so-fancy
brew install ncdu
brew install tldr
brew install ack

# Install yarn
brew link --overwrite node
brew install yarn

# Install brew cask
brew tap caskroom/cask

# Install apps with cask
brew cask install alfred
brew cask install google-chrome
brew cask install firefox
brew cask install visual-studio-code
brew cask install dropbox
brew cask install filezilla
brew cask install imageoptim
brew cask install spotify
brew cask install the-unarchiver
brew cask install virtualbox
brew cask install iterm2
brew cask install vagrant
brew cask install postman
brew cask install caffeine
brew cask install docker

# Remove outdated versions
brew cleanup

# Install global npm packages
if [ $(which npm) ]; then
  npm install -g sitemap-generator-cli
  npm install -g svgo
  npm install -g n
  npm install -g gzip-size-cli
  npm install -g flow-typed
  npm install -g create-react-app
  npm install -g prettier
  npm install -g git-open
  npm install -g http-server
  npm install -g npm-check
  npm install -g fkill-cli
  npm install -g strong-pwgen-cli
  npm install -g spaceship-prompt
  npm install -g gatsby-cli

  # Install node versions and active stable release
  n lts
  n latest
  n stable
fi

which -s composer
if [[ $? != 0 ]]; then
  # Install composer globally
  curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer
else
  # Make sure we're using latest version
  composer self-update
fi

cd "$(dirname "${BASH_SOURCE}")";

# Get latest dotfiles
#git pull origin master;

function copy() {
	rsync --exclude ".git/" \
		--exclude ".DS_Store" \
		--exclude "*.sh" \
		--exclude "README.md" \
		--exclude "LICENSE" \
    --exclude "fonts" \
		-avh --no-perms . ~;
    /bin/zsh -c "source ~/.zshrc"
}

if [ "$1" == "--force" -o "$1" == "-f" ]; then
	copy;
else
	read -p "This may overwrite existing files in your home directory. Are you sure? (y/n) " -n 1;
	echo "";
	if [[ $REPLY =~ ^[Yy]$ ]]; then
		copy;
	fi;
fi;
unset copy;
